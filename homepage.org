#+hugo_base_dir: ~/joey/homepage/

* About
:PROPERTIES:
:EXPORT_HUGO_SECTION: about
:END:
** About
:PROPERTIES:
:EXPORT_DATE: <2021-08-03 Tue>
:EXPORT_FILE_NAME: about
:END:

*Prospective Graduate Students*: I'm currently recruiting new Masters or Doctoral
students.
See [[/post/recruiting-grad-2024][this post]] if you're interested in working on programming languages theory with me.

--------------------------------

I'm Joseph (Joey) Eremondi, an Assistant Professor in
[[https://www.uregina.ca/science/cs/][Computer Science]] at the
[[https://www.uregina.ca/][University of Regina]].

My research is centred around type systems for making code more
reliable, and in the theory and practice of making such systems easier
to use. In particular, I'm interested in developing semantics to
increase the flexibility of dependent pattern matching,
mixing dependent types with
gradual types, and improving error messages for dependently-typed
languages. I've also researched the properties of reversal-bounded
counter automata, set constraints, and the shuffle operator on words

Previously, I was Royal Society Newton International Fellow doing
post-doctoral research with with
[[https://www.inf.ed.ac.uk/people/staff/Ohad_Kammar.html][Ohad Kammar]]
in the [[https://web.inf.ed.ac.uk/lfcs][Laboratory for Foundations of
Computer Science]] at the University of Edinburgh. I completed my PhD
with [[https://www.cs.ubc.ca/~rxg/][Ron Garcia]] at the
[[https://spl.cs.ubc.ca/][UBC Software Practices Laboratory]].



* blog
:PROPERTIES:
:EXPORT_HUGO_SECTION: post
:END:
** Recruiting Grad Students
:PROPERTIES:
:EXPORT_DATE: <2024-01-02>
:EXPORT_FILE_NAME: recruiting-grad-2024
:END:
I am a newly-hired Assistant Professor, recruiting Masters and Doctoral students to research programming languages theory with me at the University of Regina in Canada. Specific areas of interest include:

- Programming with dependently typed languages, like Lean, Agda, Idris, and Coq
- Improving usability of dependently typed programming languages
- Gradual types and gradual dependent types
- Live programming environments for dependent types
- Static analysis of dependently typed programs
- Ordinal notations and termination proofs
- Error messages and repair suggestions for static and dynamic type errors
- Dependent pattern matching - semantics and implementation

Graduate students at the U of R have the opportunity to be part of a small, focused research group where you can work closely with your advisor. Regina is one of Canada’s most affordable cities to live in, and students have access to Canada’s universal health care. Students are funded by stipend, and have the opportunity to gain experience as a Teaching Assistant or Sessional Lecturer.

Application deadlines are listed below, but out-of-cycle applications are possible for strong students.

- Feb 15 2024 (to begin September 2024)
- June 15 2024 (to begin January 2025)
- October 15 2024 (to begin May 2025)

For more information on applying, visit https://www.uregina.ca/science/cs/graduate/future-grad/index.html. Any questions for me specifically can be directed to me by [[mailto:jeremondi(atsymbol)uregina.ca][email]].

** UBC Beamer Theme
:PROPERTIES:
:EXPORT_DATE: <2017-12-28>
:EXPORT_FILE_NAME: ubc-beamer
:END:

   I recently had to make a LaTeX slideshow,
   and was disappointed with how awful most of the themes looked.
   I found the Metropolis theme, which was quite nice and modern, and I adapted it to have the UBC colours and logo.

   You can see it live on [[https://www.overleaf.com/read/zqngzmyspphw][Overleaf]],
   or you can see the code on [[https://github.com/JoeyEremondi/UBC-Metropolis-Beamer][GitHub]].

   Suggestions or Pull requests are welcome!

   If you’re going to a conference, or even making a presentation in a class with lots of formulas, this could come in handy.

** VSCode Package for Ott
:PROPERTIES:
:EXPORT_DATE: <2018-02-02>
:EXPORT_FILE_NAME: ott-vscode
:END:

   I’ve made a package that integrates the
   [[http://www.cl.cam.ac.uk/~pes20/ott/][Ott Semantic Modelling tool]] into Visual Studio Code.
   Right now, it supports syntax highlighting, and showing error messages inline,
   but I hope to eventually add support for source formatting, and prettifying symbols.

   You can view the package [[https://marketplace.visualstudio.com/items?itemName=JoeyEremondi.ott][here]].

   Pull requests, collaboration, suggestions are all welcome!


* news
:PROPERTIES:
:EXPORT_HUGO_SECTION: news
:END:
** New Paper: Approximate Normalization for Gradual Dependent Types
:PROPERTIES:
:EXPORT_DATE: <2019-07-26>
:EXPORT_FILE_NAME: icfp-19-arxiv-news
:END:
New paper : [[https://dl.acm.org/doi/10.1145/3341692][Approximate Normalization for Gradual Dependent Types]]
** New Paper: Improving Error Messages for Dependent Types
:PROPERTIES:
:EXPORT_DATE: <2019-01-24>
:EXPORT_FILE_NAME: tfp-19-arxiv-news
:END:
New paper :
[[https://www.degruyter.com/view/j/comp.2019.9.issue-1/comp-2019-0001/comp-2019-0001.xml?format=INT][Improving Error Messages for Dependent Types]]

** McCarthy Award
:PROPERTIES:
:EXPORT_DATE: <2020-02-17>
:EXPORT_FILE_NAME: mccarthy-award
:END:

I was awarded the John McCarthy best paper award for my [[https://arxiv.org/abs/1905.09423][TFP 2019]] paper

** Defended Proposal
:PROPERTIES:
:EXPORT_DATE: <2021-03-17>
:EXPORT_FILE_NAME: Proposal-defense
:END:
I have successfully defended my thesis proposal: I am officially a PhD Candidate



** New Paper: Propositional Equality for Gradual Dependently Typed Programming
:PROPERTIES:
:EXPORT_DATE: <2022-05-21>
:EXPORT_FILE_NAME: icfp22-accepted
:END:
New paper :
[[https://arxiv.org/abs/2205.01241][Propositional Equality for Gradual Dependently Typed Programming]] accepted to ICFP 2022




** Award: Newton International Fellowship
:PROPERTIES:
:EXPORT_DATE: <2022-10-16>
:EXPORT_FILE_NAME: newton-award
:END:
Awarded the Royal Society Newton International Fellowship with Ohad Kammar,
researching improved semantics for dependent pattern matching

** Dissertation Available
:PROPERTIES:
:EXPORT_DATE: <2023-04-01>
:EXPORT_FILE_NAME: diss-online
:END:
Successfully defended PhD thesis  "On The Design of a Gradual Dependently Typed Language for Programming". The final version of my dissertation can be read [[https://dx.doi.org/10.14288/1.0428823][here]].
** MSP101 Talk
:PROPERTIES:
:EXPORT_DATE: <2023-06-30>
:EXPORT_FILE_NAME: msp101-talk
:END:
Gave a talk at the University of Strathclyde MSP101 Seminar Series about gradual dependent types, [[https://www.youtube.com/watch?time_continue=1&v=0d8DlrgL814&source_ve_path=Mjg2NjY&feature=emb_logo][video here]]
** SPLS Talk
:PROPERTIES:
:EXPORT_DATE: <2023-12-06>
:EXPORT_FILE_NAME: spls23-talk
:END:
Gave a talk at the Scottish Programming Languages Seminar about my postdoc research on pattern matching, [[https://www.youtube.com/watch?v=t-9coCh3mOE][video here]]
** Start at Regina
:PROPERTIES:
:EXPORT_DATE: <2024-01-02>
:EXPORT_FILE_NAME: regina-start
:END:
Started as Assistant Professor at University of Regina.
** New Paper: Coverage Semantics for Dependent Pattern Matching
:PROPERTIES:
:EXPORT_DATE: <2025-02-18>
:EXPORT_FILE_NAME: esop25-accepted
:END:
New paper : [[https://arxiv.org/abs/2501.18087][Coverage Semantics for Dependent Pattern Matching]]
* Teaching
:PROPERTIES:
:EXPORT_HUGO_SECTION: teaching
:END:
** CS350 2024
:PROPERTIES:
:EXPORT_DATE: <2024-07-01>
:EXPORT_FILE_NAME: cs350-2024
:END:
CS 350: Programming Language Concepts

* publications
:PROPERTIES:
:EXPORT_HUGO_SECTION: publication
:END:


** CPP24
:PROPERTIES:
:EXPORT_FILE_NAME: cpp24
:EXPORT_TITLE: Stricty Monotone Brouwer Trees for Well-Founded Recursion Over Multiple Arguments
:EXPORT_DATE: <2024-01-10>
:END:
#+begin_src toml :front_matter_extra t
[extra]
authors = ["Joseph Eremondi"]

publication = "Certified Programs and Proofs"
publication_short = "CPP"


pdf = "https://doi.org/10.1145/3636501.3636948"
urls = [
 {name = "ArXiV", url = "https://arxiv.org/abs/2312.06962"},
 {name = "Code", url = "https://zenodo.org/doi/10.5281/zenodo.10204397"}
]
#+end_src
** ICFP22
:PROPERTIES:
:EXPORT_FILE_NAME: icfp22
:EXPORT_TITLE: Propositional Equality for Gradual Dependently Typed Programming
:EXPORT_DATE: <2022-05-21>
:END:
#+begin_src toml :front_matter_extra t
[extra]
authors = ["Joseph Eremondi", "Ron Garcia", "Éric Tanter"]

publication = "International Conference on Functional Programming "
publication_short = "ICFP"


pdf = "https://dl.acm.org/doi/10.1145/3547627"
urls = [
 {name = "ArXiV", url = "https://arxiv.org/abs/2205.01241"},
 {name = "Video", url = "https://www.youtube.com/watch?v=-wTfXsuNwrA&t=1s"}
]
#+end_src
** TFP19
:PROPERTIES:
:EXPORT_FILE_NAME: tfp19
:EXPORT_TITLE: Set Constraints, Pattern Match Analysis and SMT
:EXPORT_DATE: <2019-06-01>
:END:
#+begin_src toml :front_matter_extra t
[extra]
authors = ["Joseph Eremondi"]

publication = "Trends in Functional Programming"
publication_short = "TFP"


pdf = "https://link.springer.com/chapter/10.1007/978-3-030-47147-7_6"
urls = [
 {name = "Code", url = "https://github.com/JoeyEremondi/elm-compiler-patmatch-smt" },
 {name = "ArXiV", url = "https://arxiv.org/abs/1905.09423"}
]
#+end_src
** ICFP19
:PROPERTIES:
:EXPORT_FILE_NAME: icfp19
:EXPORT_TITLE: Approximate Normalization for Gradual Dependent Types
:EXPORT_DATE: <2019-07-26>
:END:
#+begin_src toml :front_matter_extra t
[extra]
authors = ["Joseph Eremondi", "Éric Tanter", "Ron Garcia"]

publication = "International Conference on Functional Programming"
publication_short = "ICFP"


pdf = "https://dl.acm.org/doi/10.1145/3341692"
urls = [
 {name = "Code", url =  "https://github.com/JoeyEremondi/GDTL-artifact"},
 {name = "Video", url = "https://www.youtube.com/watch?v=e4FeQCabuOQ"}
]
#+end_src



** OpenCS Masters
:PROPERTIES:
:EXPORT_FILE_NAME: ocs19
:EXPORT_TITLE: A Framework for Improving Error Messages in Dependently-Typed Languages
:EXPORT_DATE: <2019-01-24>
:END:
#+begin_src toml :front_matter_extra t
[extra]
authors = ["Joseph Eremondi", "Wouter Swierstra", "Jurriaan Hage"]

publication = "Open Computer Science"
publication_short = "Open CS"


pdf = "https://www.degruyter.com/document/doi/10.1515/comp-2019-0001/html"
urls = [
 {name = "Code", url = "https://github.com/JoeyEremondi/lambda-pi-constraint"},
 {name = "MSc Thesis Version", url = "http://dspace.library.uu.nl/handle/1874/337692" },
]
#+end_src


** Shuffle Complexity
:PROPERTIES:
:EXPORT_FILE_NAME: shuffle-comp
:EXPORT_TITLE: On the Complexity and Decidability of Some Problems Involving Shuffle
:EXPORT_DATE: <2018-04-01>
:END:
#+begin_src toml :front_matter_extra t
[extra]
authors = ["Joseph Eremondi", "Oscar H. Ibarra", "Ian McQuillan"]

publication = "Information and Computing"
publication_short = "Info. Comput."


pdf = "https://www.sciencedirect.com/science/article/abs/pii/S0890540117301591"
urls = [
  {name = "Conference Version (DCFS'15)", url = "https://link.springer.com/chapter/10.1007/978-3-319-19225-3_9"},
  {name = "ArXiV", url = "https://arxiv.org/abs/1606.01199"}
]
#+end_src

** Density Languages
:PROPERTIES:
:EXPORT_FILE_NAME: density-lang
:EXPORT_TITLE: On the Density of Context-Free and Counter Languages
:EXPORT_DATE: <2018-02-01>
:END:
#+begin_src toml :front_matter_extra t
[extra]
authors = ["Joseph Eremondi", "Oscar H. Ibarra", "Ian McQuillan"]

publication = "International Journal of Foundations of Computer Science"
publication_short = "IJFCS"


pdf = "https://www.worldscientific.com/doi/abs/10.1142/S0129054118400051"
urls = [
{name = "Conference Version (DLT'15)", url = "https://link.springer.com/chapter/10.1007/978-3-319-21500-6_18"},
{name = "ArXiV", url = "https://arxiv.org/abs/1903.03001" }
]
#+end_src


** Insertion Operations
:PROPERTIES:
:EXPORT_FILE_NAME: insertion-ops
:EXPORT_TITLE: Insertion Operations on Deterministic Reversal-Bounded Counter Machines
:EXPORT_DATE: <2019-01-01>
:END:
#+begin_src toml :front_matter_extra t
[extra]
authors = ["Joseph Eremondi", "Oscar H. Ibarra", "Ian McQuillan"]

publication = "Journal of Computer and System Sciences"
publication_short = "Comp. System Sciences"


pdf = "https://www.sciencedirect.com/science/article/abs/pii/S002200001830117X"
urls = [
{name = "Conference Version (LATA'15)", url = "https://link.springer.com/chapter/10.1007/978-3-319-15579-1_15" },
{name = "ArXiV", url = "https://arxiv.org/abs/1903.03518"  }
]
#+end_src


** Deletion Operations
:PROPERTIES:
:EXPORT_FILE_NAME: deletion-ops
:EXPORT_TITLE: Deletion Operations on Deterministic Families of Automata
:EXPORT_DATE: <2017-10-01>
:END:
#+begin_src toml :front_matter_extra t
[extra]
authors = ["Joseph Eremondi", "Oscar H. Ibarra", "Ian McQuillan"]

publication = "Information and Computing"
publication_short = "Info. Comput"


pdf = "https://www.sciencedirect.com/science/article/abs/pii/S0890540117301104"
urls = [
{name = "Conference Version (TAMC'15)", url = "https://link.springer.com/chapter/10.1007/978-3-319-17142-5_33" },
{name = "ArXiV", url = "https://arxiv.org/abs/1607.00931"  }
]
#+end_src

** UbiLight
:PROPERTIES:
:EXPORT_FILE_NAME: aspecta
:EXPORT_TITLE: The ASPECTA Toolkit: Affordable Full Coverage Displays
:EXPORT_DATE: <2016-06-01>
:END:
#+begin_src toml :front_matter_extra t
[extra]
authors = ["Julian Petford", "Miguel A. Nacenta", "Carl Gutwin", "Joseph Eremondi", "Cody Ede"]

publication = "Proceedings of the 5th ACM International Symposium on Pervasive Displays"
publication_short = "PerDis"


pdf = "https://dl.acm.org/doi/abs/10.1145/2914920.2915006"
urls = [
]
#+end_src

* talks
:PROPERTIES:
:EXPORT_HUGO_SECTION: talk
:END:

** ICFP19
:PROPERTIES:
:EXPORT_FILE_NAME: icfp19
:EXPORT_TITLE: Approximate Normalization for Gradual Dependent Types
:EXPORT_DATE: <2019-09-01>
:END:
#+begin_src toml :front_matter_extra t
[extra]

publication = "International Conference on Functional Programming"
publication_short = "ICFP"


url ="https://www.youtube.com/watch?v=e4FeQCabuOQ"
urls = [
 {name = "Slides (odp)", url = "/slides/icfp19.odp"},
 {name = "Slides (pdf)", url = "/slides/icfp19.pdf"},
]
#+end_src

** ICFP22
:PROPERTIES:
:EXPORT_FILE_NAME: icfp22
:EXPORT_TITLE: Propositional Equality for Gradual Dependently Typed Programming
:EXPORT_DATE: <2022-09-01>
:END:
#+begin_src toml :front_matter_extra t
[extra]

publication = "International Conference on Functional Programming"
publication_short = "ICFP"


url = "https://www.youtube.com/watch?v=-wTfXsuNwrA&t"
urls = [
 {name = "Slides", url = "/slides/icfp22.pptx"},
]
#+end_src

** MSP101 Gradual Types
:PROPERTIES:
:EXPORT_FILE_NAME: msp101_23
:EXPORT_TITLE: On The Design of a Gradual Dependently Typed Language for Programming
:EXPORT_DATE: <2023-06-01>
:END:
#+begin_src toml :front_matter_extra t
[extra]

publication = "Mathematically Structured Programming 101 (Seminar Series)"
publication_short = "MSP101"


url = "https://www.youtube.com/watch?v=0d8DlrgL814"
urls = [
 {name = "Slides", url = "/slides/msp101_jun2023.pptx"},
]
#+end_src


** WITS 2023
:PROPERTIES:
:EXPORT_FILE_NAME: wits23
:EXPORT_TITLE: An Implementation Strategy for Gradual Dependent Types
:EXPORT_DATE: <2023-09-01>
:END:
#+begin_src toml :front_matter_extra t
[extra]

publication = "Workshop on Implementing Type Systems"
publication_short = "WITS"


url = "/slides/wits_aug2023.pptx"
urls = [
]
#+end_src

** SPLS 23
:PROPERTIES:
:EXPORT_FILE_NAME: spls23
:EXPORT_TITLE: Coverage Semantics for Dependent Pattern Matching
:EXPORT_DATE: <2023-12-01>
:END:
#+begin_src toml :front_matter_extra t
[extra]

publication = "Scottish Programming Languages Symposium"
publication_short = "SPLS"


url = "https://www.youtube.com/watch?v=t-9coCh3mOE"
urls = [
 {name = "Slides", url = "/slides/spls_nov23.pptx"},
]
#+end_src
* Footnotes
* COMMENT Local Variables                          :ARCHIVE:
# Local Variables:
# eval: (org-hugo-auto-export-mode)
# End:

* Bump
